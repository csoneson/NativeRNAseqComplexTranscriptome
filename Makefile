null  :=
space := $(null) #
comma := ,

basedir := /home/Shared/data/seq/hussain_bath_nanopore_rnaseq

## Paths to software
R := R_LIBS=/home/Shared/Rlib/release-3.7-lib/ /usr/local/R/R-3.5.0/bin/R CMD BATCH --no-restore --no-save
salmon := /home/charlotte/software/salmon-0.11.0-linux_x86_64/bin/salmon
fastqc := /home/charlotte/miniconda3/bin/fastqc
minimap2 := /home/charlotte/software/minimap2_2.12_r827/minimap2
samtools := /home/charlotte/miniconda3/bin/samtools
multiqc := /home/charlotte/miniconda3/bin/multiqc
bam_count_reads := /home/charlotte/miniconda3/bin/bam_count_reads.py
featurecounts := /home/charlotte/software/subread-1.6.0-Linux-x86_64/bin/featureCounts
seqkit := /home/charlotte/miniconda3/bin/seqkit
bbmap := /home/charlotte/software/bbmap
bedtools := /home/charlotte/software/bedtools2/bin/bedtools
bedGraphToBigWig := bedGraphToBigWig
trimgalore := /home/charlotte/software/trim_galore_v0.4.4/trim_galore
cutadapt := /home/charlotte/.local/bin/cutadapt
STAR := /home/Shared_penticton/software/STAR/source/STAR
hisat2 := /home/charlotte/software/hisat2-2.1.0
stringtie := /home/charlotte/software/stringtie-1.3.3b.Linux_x86_64/stringtie
flair := /home/charlotte/software/flair/flair.py
bam2bed12 := /home/charlotte/software/flair/bin/bam2Bed12.py
python := /home/charlotte/miniconda3/bin/python
python2 := /home/charlotte/miniconda2/bin/python2
gtfToGenePred := gtfToGenePred
psl2gff := psl2gff-fast.pl
gffcompare := /home/charlotte/software/gffcompare-0.10.6.Linux_x86_64/gffcompare

## Paths to reference files (either existing or generated by the Makefile)
annotdir := /home/Shared/data/annotation/Human/Ensembl_GRCh38.90
genome := $(annotdir)/genome/Homo_sapiens.GRCh38.dna.primary_assembly.fa
cdna := $(annotdir)/cDNA/Homo_sapiens.GRCh38.cdna.all.fa
ncrna := $(annotdir)/ncRNA/Homo_sapiens.GRCh38.ncrna.fa
gtf := $(annotdir)/gtf/Homo_sapiens.GRCh38.90.gtf
STARindex := $(annotdir)/STAR/sjdbOverhang199
chromlengthtxt := $(STARindex)/chrNameLength.txt
hisat2index := $(annotdir)/genome/hisat2idx/Homo_sapiens.GRCh38.dna.primary_assembly
hisat2ss := reference/Homo_sapiens.GRCh38.90.hisat2ss.txt
genepred := reference/Homo_sapiens.GRCh38.90.gp
promoterdir := reference/chromhmm_promoters
promoterbed := $(promoterdir)/hg38_promoters.bed

transcriptome := reference/Homo_sapiens.GRCh38.90.cdna.ncrna.fa
sidx31 := reference/salmon_index/Homo_sapiens.GRCh38.cdna.ncrna.fa.0.11.0.k31.sidx
sidx31nokeepdup := reference/salmon_index/Homo_sapiens.GRCh38.cdna.ncrna.fa.0.11.0.k31.nokeepdup.sidx
tx2gene := reference/Homo_sapiens.GRCh38.90.cdna.ncrna.tx2gene.rds
metatxt := Illumina/metadata.txt

## Path to main R script directory
Rscriptdir := Rscripts

## Number of threads for parallel execution
nthreads := 36

## Define data sets to include in final plots, and full set of data sets
datasets := DCS108 FGCZ HEK293RNA NSK007 RNA001 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION
include datasets_to_include.mk

## Define samples for each data set
DCS108samples := srpk_1_DCS108 srpk_2_DCS108 wt_1_DCS108 wt_2_DCS108
FGCZsamples := 20171207_1645_p2557_4017_2_ALLREADS.pass
HEK293RNAsamples := HEK_1 HEK_2 HEK_3 HEK_4 HEK_5
NSK007samples := SS2_srpk_1 SS2_srpk_2 SS2_wt_1 SS2_wt_2
RNA001samples := srpk_1_RNA001 srpk_2_RNA001 srpk_3_RNA001 srpk_4_RNA001 srpk_5_RNA001 srpk_6_RNA001 wt_1_RNA001 wt_2_RNA001 wt_3_RNA001 wt_4_RNA001 wt_5_RNA001 wt_6_RNA001
pilotsamples := wt1 wt2 Srpk_1 Srpk_2
FGCZ_PCS109samples := 20181026_0911_p2557_4959_1.pass
FGCZ_SQK_PCS109samples := wt4
FGCZ_PCS109_GridIONsamples := p2557_5265_1 p2557_5265_2 p2557_5265_5 p2557_5265_6

DCS108WTsamples := wt_1_DCS108 wt_2_DCS108
FGCZWTsamples := 20171207_1645_p2557_4017_2_ALLREADS.pass
HEK293RNAWTsamples := HEK_1 HEK_2 HEK_3 HEK_4 HEK_5
NSK007WTsamples := SS2_wt_1 SS2_wt_2
RNA001WTsamples := wt_1_RNA001 wt_2_RNA001 wt_3_RNA001 wt_4_RNA001 wt_5_RNA001 wt_6_RNA001
pilotWTsamples := wt1 wt2
FGCZ_PCS109WTsamples := 20181026_0911_p2557_4959_1.pass
FGCZ_SQK_PCS109WTsamples := wt4
FGCZ_PCS109_GridIONWTsamples := p2557_5265_1 p2557_5265_2

Illuminasamples := 20170918.A-dSprk1_1 20170918.A-dSprk1_2 20170918.A-dSprk1_3 20170918.A-dSprk1_4 \
20170918.A-WT_1 20170918.A-WT_2 20170918.A-WT_3 20170918.A-WT_4
IlluminaWTsamples := 20170918.A-WT_1 20170918.A-WT_2 20170918.A-WT_3 20170918.A-WT_4

## SIRV E0 (SRR6058584) and ERCC Mix1 (SRR6058582) data set from nanopore dRNA paper
dRNA_paper_samples := SRR6058584
dRNA_paper_ERCC_samples := SRR6058582

.PHONY: all flairres nanoporeres illuminares manuscript sirv

all: nanoporeres illuminares manuscript sirv flairres

flairres: $(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_s_primary.bed)) \
$(foreach D,$(datasets),$(D)/minimap2genome/$(D)_all/$(D)_all_minimap_genome_s_primary.bed) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples) $(D)_all $(D)_WT,$(D)/flair/$(S)/$(S)_minimap_genome_s_primary_flair_correct.corrected.psl)) \
$(foreach D,$(datasets),$(D)/FASTQmerged/$(D)_all.fastq.gz) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples) $(D)_all $(D)_WT,$(D)/flair/$(S)/$(S)_minimap_genome_s_primary_flair_collapse.isoforms.gffcompare)) \
$(foreach D,$(datasets),$(D)/flair/$(D)_all/plots/$(D)_all_flair_vs_annotation.rds) \
$(foreach D,$(datasets),$(D)/minimap2genome/$(D)_WT/$(D)_WT_minimap_genome_s_primary.bed) \
$(foreach D,$(datasets),$(D)/FASTQmerged/$(D)_WT.fastq.gz) \
$(foreach D,$(datasets),$(D)/flair/$(D)_WT/plots/$(D)_WT_flair_vs_annotation.rds)

nanoporeres: $(transcriptome) $(tx2gene) $(sidx31)/hash.bin $(sidx31nokeepdup)/hash.bin \
$(foreach D,DCS108 HEK293RNA NSK007 RNA001 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(D)/FastQC/$(S)_fastqc.html)) \
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(D)/FastQCdna/$(S)_fastqc.html)) \
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(D)/FastQC/$(S).FASTQ_fastqc.html)) \
$(foreach D,$(datasets),$(D)/MultiQC/multiqc_report.html) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_s.bam.bai)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_sbyname.bam)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_sbyname_primary.bam)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_s.flagstat)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_qc.rds)) \
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_s.bw)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/FASTQ_aligned_noclippedbases/$(S)_aligned_noclippedbases.fastq.gz)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/featurecountsminimap2_primary/$(S)/featurecountsminimap2.txt)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2txome/$(S)/$(S)_minimap_txome.bam)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2txome/$(S)/$(S)_minimap_txome.flagstat)) \
$(foreach P,0.99,$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2txome_p$(P)/$(S)/$(S)_minimap_txome_p$(P).flagstat))) \
$(foreach P,0.9 0.95,$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(D)/minimap2txome_p$(P)/$(S)/$(S)_minimap_txome_p$(P).flagstat))) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/salmon31/$(S)/quant.sf)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/salmon31_aligned_noclippedbases/$(S)/quant.sf)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/salmonminimap2/$(S)/quant.sf)) \
$(foreach P,0.99,$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/salmonminimap2_p$(P)/$(S)/quant.sf))) \
$(foreach P,0.9 0.95,$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(D)/salmonminimap2_p$(P)/$(S)/quant.sf))) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/wubminimap2/$(S)/bam_count_reads.tsv)) \
$(foreach P,0.99,$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/wubminimap2_p$(P)/$(S)/bam_count_reads.tsv))) \
$(foreach P,0.9 0.95,$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(D)/wubminimap2_p$(P)/$(S)/bam_count_reads.tsv))) \
$(foreach D,$(datasets),$(D)/output/$(D)_all_abundances.rds) \
$(foreach D,DCS108 pilot NSK007 RNA001,$(D)/output/$(D)_all_dge_edger.rds) \
$(foreach D,$(datasets),$(D)/output/$(D)_eq_classes_salmon31.rds) \
$(foreach D,DCS108 HEK293RNA NSK007 RNA001 pilot,$(D)/output/$(D)_abundance_plot.html) \
$(foreach D,DCS108 pilot NSK007 RNA001,$(D)/output/$(D)_all_dtu_dexseq.rds) \
$(foreach D,$(datasets),$(D)/output/$(D)_nbr_reads.rds) \
$(foreach D,$(datasets),$(D)/output/$(D)_primary_supplementary_alignments_distances.rds) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_sbyname_primary_junctions.rds)) \
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_s_junctions.rds))

illuminares: Illumina/MultiQC/multiqc_report.html \
Illumina/output/dexseq_dtu.rds Illumina/output/edgeR_dge.rds Illumina/output/edgeR_dte.rds \
Illumina/output/Illumina_all_abundances.rds \
Illumina/output/Illumina_eq_classes_salmon31.rds \
Illumina/hisat2/Illumina_WT/Illumina_WT.bam \
$(foreach S,$(Illuminasamples),Illumina/stringtie/$(S)/$(S)_stringtie.gtf) \
$(foreach S,$(Illuminasamples) Illumina_WT,Illumina/stringtie_assembly/$(S)/$(S)_stringtie_assembly.gtf) \
$(foreach S,$(Illuminasamples) Illumina_WT,Illumina/stringtie_assembly/$(S)/$(S)_stringtie_assembly.gffcompare) \
$(foreach S,$(Illuminasamples),Illumina/STAR/$(S)/$(S)_Aligned.sortedByCoord.out_junctions.rds)

manuscript: manuscript_results_figures/figures/nbr_reads/nbr_reads.rds \
manuscript_results_figures/figures/alignment/alignment.rds \
manuscript_results_figures/figures/consistency_between_replicates/consistency_between_replicates.rds \
manuscript_results_figures/figures/txcov_subsampling/txcov_subsampling.rds \
manuscript_results_figures/figures/nbr_tx_in_eqclass/nbr_tx_in_eqclass.rds \
manuscript_results_figures/figures/nbr_assigned_reads/nbr_assigned_reads.rds \
manuscript_results_figures/figures/primary_supplementary_pairs/primary_supplementary_pairs.rds \
manuscript_results_figures/figures/illumina_nanopore_lengths_all_datasets/illumina_nanopore_lengths_all_datasets.rds \
manuscript_results_figures/figures/observed_junctions/observed_junctions.rds \
manuscript_results_figures/figures/txcov_subsampling/txcov_sirv.rds \
manuscript_results_figures/figures/txcov_subsampling/txcov_ercc.rds \
manuscript_results_figures/figures/nbr_junctions_per_read_illumina/nbr_junctions_per_read_illumina.rds \
manuscript_results_figures/figures/rseqc_coverage/rseqc_coverage.rds \
manuscript_results_figures/figures/flair_summary/flair_summary.rds \
manuscript_results_figures/figures/txlength_vs_basecoverage/txlength_vs_basecoverage.rds \
manuscript_results_figures/figures/quant_salmon_wub_variants/quant_salmon_variants_all_datasets.rds \
manuscript_results_figures/figures/nbr_detected_features/nbr_detected_features.rds \
manuscript_results_figures/figures/nbr_assigned_reads_biotype/nbr_assigned_reads_biotype.rds

sirv: $(foreach S,$(dRNA_paper_samples),dRNA_paper/minimap2txome_p0.99/$(S)/$(S)_minimap_txome_p0.99.bam) \
$(foreach S,$(dRNA_paper_samples),dRNA_paper/minimap2txome/$(S)/$(S)_minimap_txome.bam) \
$(foreach S,$(dRNA_paper_samples),dRNA_paper/minimap2genome/$(S)/$(S)_minimap_genome_s.bam) \
dRNA_paper/output/dRNA_paper_nbr_reads.rds \
$(foreach S,$(dRNA_paper_ERCC_samples),dRNA_paper_ERCC/minimap2txome_p0.99/$(S)/$(S)_minimap_txome_p0.99.bam) \
$(foreach S,$(dRNA_paper_ERCC_samples),dRNA_paper_ERCC/minimap2txome/$(S)/$(S)_minimap_txome.bam) \
$(foreach S,$(dRNA_paper_ERCC_samples),dRNA_paper_ERCC/minimap2genome/$(S)/$(S)_minimap_genome_s.bam) \
dRNA_paper_ERCC/output/dRNA_paper_ERCC_nbr_reads.rds

## ========================================================================================= ##
## Prepare annotation
## ========================================================================================= ##
## Merge cDNA and ncRNA transcript sequences into one fasta files
$(transcriptome): $(cdna) $(ncrna)
	cat $(cdna) $(ncrna) > $(transcriptome)

## Extract the transcript-to-gene mapping
$(tx2gene): $(transcriptome) $(gtf) $(Rscriptdir)/generate_tx2gene.R
	mkdir -p Rout
	$(R) "--args transcriptome='$(transcriptome)' gtf='$(gtf)' outrds='$@'" $(Rscriptdir)/generate_tx2gene.R Rout/generate_tx2gene.Rout

## Generate Salmon indices
$(sidx31)/hash.bin: $(transcriptome)
	$(salmon) index -t $(transcriptome) -k 31 -i $(sidx31) -p $(nthreads) --type quasi --keepDuplicates

$(sidx31nokeepdup)/hash.bin: $(transcriptome)
	$(salmon) index -t $(transcriptome) -k 31 -i $(sidx31nokeepdup) -p $(nthreads) --type quasi

## Generate STAR index
$(STARindex)/SA: $(genome) $(gtf)
	mkdir -p $(@D)
	$(STAR) --runMode genomeGenerate --runThreadN $(nthreads) --genomeDir $(STARindex) \
	--genomeFastaFiles $(genome) --sjdbGTFfile $(gtf) --sjdbOverhang 199

$(chromlengthtxt): $(STARindex)/SA
	touch $(chromlengthtxt)

## Generate HISAT2 index
$(hisat2index).1.ht2: $(genome)
	mkdir -p $(@D)
	$(hisat2)/hisat2-build -p $(nthreads) $(genome) $(hisat2index)

## Extract splice sites for HISAT2
$(hisat2ss): $(gtf)
	python $(hisat2)/hisat2_extract_splice_sites.py $(gtf) > $(hisat2ss)

## Convert gtf to genepred format
$(genepred): $(gtf)
	$(gtfToGenePred) $(gtf) $(genepred)

## Get bed file with promoter regions from Ensembl
$(promoterbed): $(foreach W,Gm12878 H1hesc Hepg2 Hmec Hsmm Huvec K562 Nhek Nhlf,$(promoterdir)/hg38_liftOver/wgEncodeBroadHmm$(W)HMM_liftOver_hg38.bed) \
$(Rscriptdir)/merge_promoter_bed_files.R
	mkdir -p $(promoterdir)/hg38_liftOver_promoters
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmGm12878HMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmGm12878HMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmH1hescHMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmH1hescHMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmHepg2HMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmHepg2HMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmHmecHMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmHmecHMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmHsmmHMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmHsmmHMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmHuvecHMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmHuvecHMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmK562HMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmK562HMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmNhekHMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmNhekHMM_liftOver_hg38_promoters.bed
	grep -E '1_Active|2_Weak|3_Poised' $(promoterdir)/hg38_liftOver/wgEncodeBroadHmmNhlfHMM_liftOver_hg38.bed > $(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmmNhlfHMM_liftOver_hg38_promoters.bed
	$(R) "--args bedsin='$(subst $(space),$(comma),$(strip $(foreach W,Gm12878 H1hesc Hepg2 Hmec Hsmm Huvec K562 Nhek Nhlf,$(promoterdir)/hg38_liftOver_promoters/wgEncodeBroadHmm$(W)HMM_liftOver_hg38_promoters.bed)))' bedout='$@'" $(Rscriptdir)/merge_promoter_bed_files.R Rout/merge_promoter_bed_files.Rout

## ========================================================================================= ##
## Clean up reads
## ========================================================================================= ##
## Remove reads that are artificial aggregates of unrelated "template" and "complement" reads
define fastqrule
$(1)/FASTQ/$(2).fastq.gz: $(1)/FASTQ/$(2)_orig.fastq.gz
	mkdir -p $(1)/Rout
	$(R) "--args fastqin='$$<' fastqout='$$@'" $(Rscriptdir)/filter_fastq.R $(1)/Rout/filter_fastq_$(2).Rout
endef
$(foreach S,SS2_srpk_1 SS2_wt_1,$(eval $(call fastqrule,NSK007,$(S))))
$(foreach S,$(pilotsamples),$(eval $(call fastqrule,pilot,$(S))))

## ========================================================================================= ##
## Convert Us to Ts in dRNA FASTQ files
## ========================================================================================= ##
define u2trule
$(1)/FASTQdna/$(2).fastq.gz: $(1)/FASTQ/$(2).fastq.gz
	mkdir -p $$(@D)
	$(seqkit) seq --threads $(nthreads) --rna2dna $$< | gzip > $$@
endef
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call u2trule,$(D),$(S)))))

## ========================================================================================= ##
## Run FastQC
## ========================================================================================= ##
## FastQC may fail for some files if it runs out of memory. This can often be 
## addressed by increasing the number of threads - it is assigned a fixed amount of memory 
## per thread. 
define fastqcrule
$(1)/FastQC$(5)/$(2)$(3)_fastqc.html: $(1)/FASTQ$(5)/$(2).$(4).gz
	mkdir -p $$(@D)
	$(fastqc) -o $$(@D) -t $(nthreads) $$<
endef
$(foreach D,DCS108 HEK293RNA NSK007 RNA001 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call fastqcrule,$(D),$(S),,fastq,))))
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call fastqcrule,$(D),$(S),.FASTQ,FASTQ,))))
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call fastqcrule,$(D),$(S),,fastq,dna))))
$(foreach D,Illumina,$(foreach S,$($(D)samples),$(eval $(call fastqcrule,$(D),$(S)_R1,,fastq,))))
$(foreach D,Illumina,$(foreach S,$($(D)samples),$(eval $(call fastqcrule,$(D),$(S)_R2,,fastq,))))

## Illumina, trimmed reads
define fastqcrule2
Illumina/FastQC/$(1)_fastqc.html: Illumina/FASTQtrimmed/$(1).fq.gz
	mkdir -p $$(@D)
	$(fastqc) -o $$(@D) -t $(nthreads) $$<
endef
$(foreach S,$(Illuminasamples),$(eval $(call fastqcrule2,$(S)_R1_val_1)))
$(foreach S,$(Illuminasamples),$(eval $(call fastqcrule2,$(S)_R2_val_2)))

## ========================================================================================= ##
## Run MultiQC
## ========================================================================================= ##
define multiqcrule
$(1)/MultiQC/multiqc_report.html: $(foreach S,$($(1)samples),$(1)/FastQC$(2)/$(S)$(3)_fastqc.html) \
$(foreach S,$($(1)samples),$(1)/salmonminimap2/$(S)/quant.sf) \
$(foreach S,$($(1)samples),$(1)/salmon31/$(S)/quant.sf) \
$(foreach S,$($(1)samples),$(1)/minimap2genome/$(S)/$(S)_minimap_genome_s.flagstat)
	mkdir -p $$(@D)
	$(multiqc) $(1)/FastQC$(2) $(1)/salmonminimap2 $(1)/salmon31 $(1)/minimap2genome -d -f -o $$(@D)
endef
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(eval $(call multiqcrule,$(D),,)))
$(foreach D,FGCZ,$(eval $(call multiqcrule,$(D),,.FASTQ)))
$(foreach D,HEK293RNA RNA001,$(eval $(call multiqcrule,$(D),dna,)))

## Illumina
Illumina/MultiQC/multiqc_report.html: \
$(foreach S,$(Illuminasamples),Illumina/FastQC/$(S)_R1_fastqc.html) \
$(foreach S,$(Illuminasamples),Illumina/FastQC/$(S)_R2_fastqc.html) \
$(foreach S,$(Illuminasamples),Illumina/FastQC/$(S)_R1_val_1_fastqc.html) \
$(foreach S,$(Illuminasamples),Illumina/FastQC/$(S)_R2_val_2_fastqc.html) \
$(foreach S,$(Illuminasamples),Illumina/FASTQtrimmed/$(S)_R1_val_1.fq.gz) \
$(foreach S,$(Illuminasamples),Illumina/FASTQtrimmed/$(S)_R2_val_2.fq.gz) \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) \
$(foreach S,$(Illuminasamples),Illumina/STAR/$(S)/$(S)_Aligned.sortedByCoord.out.bam.bai)
	mkdir -p $(@D)
	$(multiqc) Illumina/FastQC Illumina/FASTQtrimmed Illumina/salmon31 Illumina/STAR -f -o $(@D)

## ========================================================================================= ##
## Adapter trimming (Illumina)
## ========================================================================================= ##
## TrimGalore!
define trimrule
Illumina/FASTQtrimmed/$(1)_R1_val_1.fq.gz: Illumina/FASTQ/$(1)_R1.fastq.gz Illumina/FASTQ/$(1)_R2.fastq.gz
	mkdir -p $$(@D)
	$(trimgalore) -q 20 --phred33 --length 20 -o $$(@D) --path_to_cutadapt $(cutadapt) \
	--paired $$(word 1,$$^) $$(word 2,$$^) 
endef
$(foreach S,$(Illuminasamples),$(eval $(call trimrule,$(S))))

define trimrule2
Illumina/FASTQtrimmed/$(1)_R2_val_2.fq.gz: Illumina/FASTQtrimmed/$(1)_R1_val_1.fq.gz
	touch $$@
endef
$(foreach S,$(Illuminasamples),$(eval $(call trimrule2,$(S))))

## ========================================================================================= ##
## Genome alignment
## ========================================================================================= ##
define minimap2genomerule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam: $(1)/FASTQ$(4)/$(2).$(3).gz $(genome) $(minimap2)
	mkdir -p $$(@D)
	$(minimap2) -t $(nthreads) -ax splice -N 10 $(genome) $$< | $(samtools) view -bS - | \
	$(samtools) sort -o $$@ -T $(1)/tmp$(2) -@ $(nthreads) - 
endef
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call minimap2genomerule,$(D),$(S),fastq,))))
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call minimap2genomerule,$(D),$(S),FASTQ,))))
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call minimap2genomerule,$(D),$(S),fastq,dna))))

## Convert BAM files to bigWig
define bigwigrule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bw: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam $(chromlengthtxt)
	mkdir -p $$(@D)	
	$(bedtools) genomecov -split -ibam $$(word 1,$$^) -bg > $$(@D)/$(2)_minimap_genome_s.bedGraph
	$(bedGraphToBigWig) $$(@D)/$(2)_minimap_genome_s.bedGraph $$(word 2,$$^) $$@
	rm -f $$(@D)/$(2)_minimap_genome_s.bedGraph
endef
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call bigwigrule,$(D),$(S)))))

## Index genome bam
define minimap2indexrule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam.bai: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam
	$(samtools) index $$<
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call minimap2indexrule,$(D),$(S)))))

## Sort genome bam by name
define sortbynamerule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_sbyname.bam: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam
	$(samtools) sort -n -o $$@ -T $(1)/tmp$(2) -@ $(nthreads) $$<
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call sortbynamerule,$(D),$(S)))))

## Keep only primary alignments (no secondary/supplementary ones)
## 0x0800 - supplementary, 0x0100 - secondary
define primaryrule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_sbyname_primary.bam: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_sbyname.bam
	$(samtools) view -b -F 4 $$< | $(samtools) view -b -F 0x0800 - | $(samtools) view -b -F 0x0100 - > $$@ 
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call primaryrule,$(D),$(S)))))

## Primary reads, but sorted by coordinate
define primaryrule2
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bam: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam
	$(samtools) view -b -F 4 $$< | $(samtools) view -b -F 0x0800 - | $(samtools) view -b -F 0x0100 - > $$@ 
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call primaryrule2,$(D),$(S)))))

## Index primary read file
define primaryindexrule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bam.bai: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bam
	$(samtools) index $$<
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call primaryindexrule,$(D),$(S)))))

## Extract observed junctions from primary alignments
define junctionrule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_$(3)_junctions.rds: $(gtf) \
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_$(3).bam $(Rscriptdir)/extract_observed_junctions.R
	mkdir -p $(1)/Rout
	$(R) "--args refgtf='$(gtf)' bam='$$(word 2,$$^)' paired=FALSE outrds='$$@'" $(Rscriptdir)/extract_observed_junctions.R $(1)/Rout/extract_observed_junctions_$(2)_$(3).Rout
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call junctionrule,$(D),$(S),sbyname_primary))))
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call junctionrule,$(D),$(S),s))))

## Generate a fastq file with only reads that align, and with soft- and hard-clipped bases from the genome alignment removed
## awk command to remove soft-clipped bases is from https://groups.google.com/forum/#!topic/rna-star/Ta1Z2u4bPfc
define cliprule
$(1)/FASTQ_aligned_noclippedbases/$(2)_aligned_noclippedbases.fastq.gz: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_sbyname_primary.bam
	mkdir -p $(1)/FASTQ_aligned_noclippedbases
	samtools view -h $$< | awk 'BEGIN {OFS="\t"} {split($$$$6,C,/[0-9]*/); split($$$$6,L,/[SMDIN]/); if (C[2]=="S") {$$$$10=substr($$$$10,L[1]+1); $$$$11=substr($$$$11,L[1]+1)}; if (C[length(C)]=="S") {L1=length($$$$10)-L[length(L)-1]; $$$$10=substr($$$$10,1,L1); $$$$11=substr($$$$11,1,L1); }; gsub(/[0-9]*S/,"",$$$$6); print}' | \
	samtools view -b - | $(bedtools) bamtofastq -i - -fq $$(basename $$@).tmp
	$(bbmap)/shuffle.sh in=$$(basename $$@).tmp out=$$@ overwrite=true ziplevel=9
	rm -f $$(basename $$@).tmp
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call cliprule,$(D),$(S)))))

## Plot QC stats per sample
define plotqcminimap2genomerule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_qc.rds: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam \
$(1)/FASTQ$(4)/$(2).$(3).gz $(Rscriptdir)/plot_qc.R
	mkdir -p $(1)/Rout
	$(R) "--args bamfile='$$(word 1,$$^)' fastqfile='$$(word 2,$$^)' outrds='$$@'" $(Rscriptdir)/plot_qc.R $(1)/Rout/plot_qc_$(2)_minimap_genome.Rout
endef
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call plotqcminimap2genomerule,$(D),$(S),fastq,))))
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call plotqcminimap2genomerule,$(D),$(S),FASTQ,))))
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call plotqcminimap2genomerule,$(D),$(S),fastq,dna))))

define minimap2flagstatrule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.flagstat: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s.bam
	$(samtools) flagstat $$< > $$@
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call minimap2flagstatrule,$(D),$(S)))))

## featureCounts 
define fcrule
$(1)/featurecountsminimap2$(3)/$(2)/featurecountsminimap2.txt: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_sbyname$(3).bam $(gtf)
	mkdir -p $$(@D)
	$(featurecounts) --minOverlap 10 -s $(4) -T $(nthreads) -L -a $(gtf) -o $$@ $$<
endef
$(foreach D,DCS108 FGCZ NSK007 pilot,$(foreach S,$($(D)samples),$(eval $(call fcrule,$(D),$(S),_primary,0))))
$(foreach D,HEK293RNA RNA001 FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call fcrule,$(D),$(S),_primary,1))))

## ========================================================================================= ##
## FLAIR
## ========================================================================================= ##
## Note that flair must be run in the conda environment named py27
## source activate py27
define flairbedrule
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bed: $(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bam \
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bam.bai $(bam2bed12)
	mkdir -p $$(@D)
	$(python2) $(bam2bed12) -i $$< > $$@
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call flairbedrule,$(D),$(S)))))

## Merge all bed files of the same dataset together (recommended way of running flair)
## Side note: since all the prerequisites of this rule are to be concatenated, the recipe 
## could also be written 'cat $$^ > $$@'
define flairbedmergerule
$(1)/minimap2genome/$(1)_all/$(1)_all_minimap_genome_s_primary.bed: \
$(foreach S,$($(1)samples),$(1)/minimap2genome/$(S)/$(S)_minimap_genome_s_primary.bed)
	mkdir -p $$(@D)
	cat $$(foreach S,$$($(1)samples),$(1)/minimap2genome/$$(S)/$$(S)_minimap_genome_s_primary.bed) > $$@
endef
$(foreach D,$(datasets),$(eval $(call flairbedmergerule,$(D))))

define flairbedmergewtrule
$(1)/minimap2genome/$(1)_WT/$(1)_WT_minimap_genome_s_primary.bed: \
$(foreach S,$($(1)WTsamples),$(1)/minimap2genome/$(S)/$(S)_minimap_genome_s_primary.bed)
	mkdir -p $$(@D)
	cat $$(foreach S,$$($(1)WTsamples),$(1)/minimap2genome/$$(S)/$$(S)_minimap_genome_s_primary.bed) > $$@
endef
$(foreach D,$(datasets),$(eval $(call flairbedmergewtrule,$(D))))

define flaircorrectrule
$(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_correct.corrected.psl: \
$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bed $(flair) $(gtf) $(STARindex)/SA
	mkdir -p $$(@D)
	cd $$(@D) && $(python2) $(flair) correct -f $(gtf) -c $(STARindex)/chrNameLength.txt \
	-q $(basedir)/$(1)/minimap2genome/$(2)/$(2)_minimap_genome_s_primary.bed \
	-t $(nthreads) -w 10 -o $(2)_minimap_genome_s_primary_flair_correct
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples) $(D)_all $(D)_WT,$(eval $(call flaircorrectrule,$(D),$(S)))))

## Merge all fastq files of the same data set together
define flairfqmergerule
$(1)/FASTQmerged/$(1)_all.fastq.gz: $(foreach S,$($(1)samples),$(1)/FASTQ$(3)/$(S).$(2).gz)
	mkdir -p $$(@D)
	cat $$^ > $$@
endef
$(foreach D,FGCZ,$(eval $(call flairfqmergerule,$(D),FASTQ,)))
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(eval $(call flairfqmergerule,$(D),fastq,)))
$(foreach D,HEK293RNA RNA001,$(eval $(call flairfqmergerule,$(D),fastq,dna)))

define flairfqmergewtrule
$(1)/FASTQmerged/$(1)_WT.fastq.gz: $(foreach S,$($(1)WTsamples),$(1)/FASTQ$(3)/$(S).$(2).gz)
	mkdir -p $$(@D)
	cat $$^ > $$@
endef
$(foreach D,FGCZ,$(eval $(call flairfqmergewtrule,$(D),FASTQ,)))
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(eval $(call flairfqmergewtrule,$(D),fastq,)))
$(foreach D,HEK293RNA RNA001,$(eval $(call flairfqmergewtrule,$(D),fastq,dna)))

define flaircollapserule
$(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.psl: \
$(1)/FASTQ$(4)/$(2).$(3).gz $(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_correct.corrected.psl $(promoterbed) \
$(flair) $(gtf) $(genome) $(minimap2)
	mkdir -p $$(@D)
	cd $$(@D) && $(python2) $(flair) collapse -r $(basedir)/$$< -q $(2)_minimap_genome_s_primary_flair_correct.corrected.psl \
	-g $(genome) -f $(gtf) -m $(minimap2) -t $(nthreads) -o $(2)_minimap_genome_s_primary_flair_collapse -s 3 \
	-p $(basedir)/$(promoterbed) -b $(bedtools)
endef
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call flaircollapserule,$(D),$(S),FASTQ,))))
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call flaircollapserule,$(D),$(S),fastq,))))
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call flaircollapserule,$(D),$(S),fastq,dna))))
$(foreach D,FGCZ DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 HEK293RNA RNA001 FGCZ_PCS109_GridION,$(eval $(call flaircollapserule,$(D),$(D)_all,fastq,merged)))
$(foreach D,FGCZ DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 HEK293RNA RNA001 FGCZ_PCS109_GridION,$(eval $(call flaircollapserule,$(D),$(D)_WT,fastq,merged)))

## Convert collapsed psl file to gff
define flairpslgffrule
$(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gff: $(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.psl
	$(psl2gff) $$<
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples) $(D)_all $(D)_WT,$(eval $(call flairpslgffrule,$(D),$(S)))))

## Convert gff to gtf compatible with gffcompare
define flairgffgtfrule
$(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gtf: $(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gff \
$(Rscriptdir)/gff2gtf.R
	$(R) "--args gff='$$<' gtf='$$@'" $(Rscriptdir)/gff2gtf.R $(1)/Rout/gff2gtf_$(2).Rout
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples) $(D)_all $(D)_WT,$(eval $(call flairgffgtfrule,$(D),$(S)))))

## Run gffcompare to compare with reference gtf
define flairgffcomparerule
$(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gffcompare: $(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gtf \
$(gtf)
	$(gffcompare) -o $$@ -r $(gtf) -R $$<
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples) $(D)_all $(D)_WT,$(eval $(call flairgffcomparerule,$(D),$(S)))))

## Plot some of the collapsed transcripts and the closest annotated one
define flairplotrule
$(1)/flair/$(2)/plots/$(2)_flair_vs_annotation.rds: $(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gffcompare \
$(1)/flair/$(2)/$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gtf $(gtf) $(Rscriptdir)/plot_compare_flair_annotation.R 
	mkdir -p $$(@D)
	mkdir -p $(1)/Rout
	$(R) "--args annotatedGtf='$(gtf)' flairGtf='$$(word 2,$$^)' dataSet='$(2)' outDir='$$(@D)' seed=1 nPlots=250 flairTmap='$$<.$(2)_minimap_genome_s_primary_flair_collapse.isoforms.gtf.tmap' outrds='$$@'" $(Rscriptdir)/plot_compare_flair_annotation.R $(1)/Rout/plot_compare_flair_annotation_$(2).Rout
endef
$(foreach D,$(datasets),$(eval $(call flairplotrule,$(D),$(D)_all)))
$(foreach D,$(datasets),$(eval $(call flairplotrule,$(D),$(D)_WT)))

## ========================================================================================= ##
## Transcriptome alignment
## ========================================================================================= ##
## Increase N to allow more (secondary) mappings
define minimap2txrule
$(1)/minimap2txome/$(2)/$(2)_minimap_txome.bam: $(1)/FASTQ$(4)/$(2).$(3).gz $(transcriptome) $(minimap2)
	mkdir -p $$(@D)
	$(minimap2) -t $(nthreads) -ax map-ont -N 100 $(transcriptome) $$< | $(samtools) view -bS - > $$@
endef
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call minimap2txrule,$(D),$(S),fastq,))))
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call minimap2txrule,$(D),$(S),FASTQ,))))
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call minimap2txrule,$(D),$(S),fastq,dna))))

define minimap2txflagstatrule
$(1)/minimap2txome/$(2)/$(2)_minimap_txome.flagstat: $(1)/minimap2txome/$(2)/$(2)_minimap_txome.bam
	$(samtools) flagstat $$< > $$@
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call minimap2txflagstatrule,$(D),$(S)))))

## Align with minimap2 with higher value of -p
define minimap2ptxrule
$(1)/minimap2txome_p$(3)/$(2)/$(2)_minimap_txome_p$(3).bam: $(1)/FASTQ$(5)/$(2).$(4).gz $(transcriptome) $(minimap2)
	mkdir -p $$(@D)
	$(minimap2) -t $(nthreads) -ax map-ont -p $(3) -N 100 $(transcriptome) $$< | $(samtools) view -bS - > $$@
endef
$(foreach P,0.9 0.95 0.99,$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call minimap2ptxrule,$(D),$(S),$(P),fastq,)))))
$(foreach P,0.9 0.95 0.99,$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call minimap2ptxrule,$(D),$(S),$(P),FASTQ,)))))
$(foreach P,0.9 0.95 0.99,$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call minimap2ptxrule,$(D),$(S),$(P),fastq,dna)))))

define minimap2ptxflagstatrule
$(1)/minimap2txome_p$(3)/$(2)/$(2)_minimap_txome_p$(3).flagstat: $(1)/minimap2txome_p$(3)/$(2)/$(2)_minimap_txome_p$(3).bam
	$(samtools) flagstat $$< > $$@
endef
$(foreach P,0.9 0.95 0.99,$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call minimap2ptxflagstatrule,$(D),$(S),$(P))))))

## ========================================================================================= ##
## Run Salmon in quasi-mapping mode
## ========================================================================================= ##
## Quantify transcript abundances with Salmon
define salmonrule
$(1)/salmon31/$(2)/quant.sf: $(1)/FASTQ$(4)/$(2).$(3).gz $(sidx31)/hash.bin
	mkdir -p $$(@D)
	$(salmon) quant -i $(sidx31) -l $(5) -r $$< -o $$(@D) -p $(nthreads) --numBootstraps 100 --dumpEq --fldMax 230000 --fldMean 600 
endef
$(foreach D,DCS108 NSK007 pilot,$(foreach S,$($(D)samples),$(eval $(call salmonrule,$(D),$(S),fastq,,U))))
$(foreach D,FGCZ,$(foreach S,$($(D)samples),$(eval $(call salmonrule,$(D),$(S),FASTQ,,U))))
$(foreach D,HEK293RNA RNA001,$(foreach S,$($(D)samples),$(eval $(call salmonrule,$(D),$(S),fastq,dna,SF))))
$(foreach D,FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call salmonrule,$(D),$(S),fastq,,SF))))

## Run Salmon on the "primary alignment part" of reads
define salmoncliprule
$(1)/salmon31_aligned_noclippedbases/$(2)/quant.sf: $(1)/FASTQ_aligned_noclippedbases/$(2)_aligned_noclippedbases.fastq.gz $(sidx31)/hash.bin
	mkdir -p $$(@D)
	$(salmon) quant -i $(sidx31) -l $(3) -r $$< -o $$(@D) -p $(nthreads) --fldMax 230000 --fldMean 600
endef
$(foreach D,DCS108 FGCZ NSK007 pilot,$(foreach S,$($(D)samples),$(eval $(call salmoncliprule,$(D),$(S),U))))
$(foreach D,HEK293RNA RNA001 FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call salmoncliprule,$(D),$(S),SF))))

## Illumina
define salmonilluminarule
Illumina/salmon31/$(1)/quant.sf: $(sidx31)/hash.bin \
Illumina/FASTQtrimmed/$(1)_R1_val_1.fq.gz Illumina/FASTQtrimmed/$(1)_R2_val_2.fq.gz
	mkdir -p $$(@D)
	$(salmon) quant -i $(sidx31) -l A -1 $$(word 2,$$^) -2 $$(word 3,$$^) \
	-o $$(@D) --gcBias --seqBias -p $(nthreads) --numBootstraps 100 --dumpEq
endef
$(foreach S,$(Illuminasamples),$(eval $(call salmonilluminarule,$(S))))

## Run Salmon considering the annotated transcripts as "reads"
reference/salmon_on_annotated_txome/Homo_sapiens.GRCh38.90.cdna.ncrna/quant.sf: $(sidx31)/hash.bin \
$(transcriptome)
	mkdir -p $(@D)
	$(salmon) quant -i $(sidx31) -l A -r $(transcriptome) -o $(@D) -p $(nthreads) --dumpEq --fldMax 230000 --fldMean 600


## ========================================================================================= ##
## Run Wub
## ========================================================================================= ##
define wubrule
$(1)/wubminimap2/$(2)/bam_count_reads.tsv: $(1)/minimap2txome/$(2)/$(2)_minimap_txome.bam $(transcriptome)
	mkdir -p $$(@D)
	$(bam_count_reads) -a 5 -z $(transcriptome) -t $$@ $$<
endef
$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call wubrule,$(D),$(S)))))

define wubprule
$(1)/wubminimap2_p$(3)/$(2)/bam_count_reads.tsv: $(1)/minimap2txome_p$(3)/$(2)/$(2)_minimap_txome_p$(3).bam $(transcriptome)
	mkdir -p $$(@D)
	$(bam_count_reads) -a 5 -z $(transcriptome) -t $$@ $$<
endef
$(foreach P,0.9 0.95 0.99,$(foreach D,$(datasets),$(foreach S,$($(D)samples),$(eval $(call wubprule,$(D),$(S),$(P))))))

## ========================================================================================= ##
## Run Salmon in alignment-based mode
## ========================================================================================= ##
define minimapsalmonrule
$(1)/salmonminimap2/$(2)/quant.sf: $(1)/minimap2txome/$(2)/$(2)_minimap_txome.bam $(transcriptome)
	mkdir -p $$(@D)
	$(salmon) quant -t $(transcriptome) -l $(3) -a $$< -o $$(@D) -p $(nthreads) --noErrorModel --numBootstraps 100 --fldMax 230000 --fldMean 600
endef
$(foreach D,DCS108 NSK007 pilot FGCZ,$(foreach S,$($(D)samples),$(eval $(call minimapsalmonrule,$(D),$(S),U))))
$(foreach D,HEK293RNA RNA001 FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call minimapsalmonrule,$(D),$(S),SF))))

define minimapsalmonprule
$(1)/salmonminimap2_p$(3)/$(2)/quant.sf: $(1)/minimap2txome_p$(3)/$(2)/$(2)_minimap_txome_p$(3).bam $(transcriptome)
	mkdir -p $$(@D)
	$(salmon) quant -t $(transcriptome) -l $(4) -a $$< -o $$(@D) -p $(nthreads) --noErrorModel --numBootstraps 100 --fldMax 230000 --fldMean 600
endef
$(foreach P,0.9 0.95 0.99,$(foreach D,DCS108 NSK007 pilot FGCZ,$(foreach S,$($(D)samples),$(eval $(call minimapsalmonprule,$(D),$(S),$(P),U)))))
$(foreach P,0.9 0.95 0.99,$(foreach D,HEK293RNA RNA001 FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(foreach S,$($(D)samples),$(eval $(call minimapsalmonprule,$(D),$(S),$(P),SF)))))

## ========================================================================================= ##
## STAR mapping (Illumina)
## ========================================================================================= ##
define starrule
Illumina/STAR/$(1)/$(1)_Aligned.sortedByCoord.out.bam: $(STARindex)/SA \
Illumina/FASTQtrimmed/$(1)_R1_val_1.fq.gz Illumina/FASTQtrimmed/$(1)_R2_val_2.fq.gz
	mkdir -p $$(@D)
	$(STAR) --genomeDir $(STARindex) \
	--readFilesIn $$(word 2,$$^) $$(word 3,$$^) \
	--runThreadN $(nthreads) --outFileNamePrefix $$(@D)/$(1)_ \
	--outSAMtype BAM SortedByCoordinate --readFilesCommand gunzip -c
endef
$(foreach S,$(Illuminasamples),$(eval $(call starrule,$(S))))

## Index bam files
define starindexrule
Illumina/STAR/$(1)/$(1)_Aligned.sortedByCoord.out.bam.bai: Illumina/STAR/$(1)/$(1)_Aligned.sortedByCoord.out.bam
	$(samtools) index $$<
endef
$(foreach S,$(Illuminasamples),$(eval $(call starindexrule,$(S))))

## Extract observed junctions from alignments
define junctionstarrule
Illumina/STAR/$(1)/$(1)_Aligned.sortedByCoord.out_junctions.rds: $(gtf) \
Illumina/STAR/$(1)/$(1)_Aligned.sortedByCoord.out.bam $(Rscriptdir)/extract_observed_junctions.R
	mkdir -p Illumina/Rout
	$(R) "--args refgtf='$(gtf)' bam='$$(word 2,$$^)' paired=TRUE outrds='$$@'" $(Rscriptdir)/extract_observed_junctions.R Illumina/Rout/extract_observed_junctions_$(1).Rout
endef
$(foreach S,$(Illuminasamples),$(eval $(call junctionstarrule,$(S))))

## Convert BAM files to bigWig
define bigwigrule
Illumina/STARbigwig/$(1)_Aligned.sortedByCoord.out.bw: $(chromlengthtxt) Illumina/STAR/$(1)/$(1)_Aligned.sortedByCoord.out.bam
	mkdir -p $$(@D)	
	$(bedtools) genomecov -split -ibam $$(word 2,$$^) -bg > $$(@D)/$(1)_Aligned.sortedByCoord.out.bedGraph
	$(bedGraphToBigWig) $$(@D)/$(1)_Aligned.sortedByCoord.out.bedGraph $$(word 1,$$^) $$@
	rm -f $$(@D)/$(1)_Aligned.sortedByCoord.out.bedGraph
endef
$(foreach S,$(Illuminasamples),$(eval $(call bigwigrule,$(S))))

## ========================================================================================= ##
## HISAT2 + StringTie (Illumina)
## ========================================================================================= ##
define hisat2rule
Illumina/hisat2/$(1)/$(1).bam: $(hisat2index).1.ht2 $(hisat2ss) \
Illumina/FASTQtrimmed/$(1)_R1_val_1.fq.gz Illumina/FASTQtrimmed/$(1)_R2_val_2.fq.gz
	mkdir -p $$(@D)
	$(hisat2)/hisat2 -p $(nthreads) -x $(hisat2index) --dta -1 Illumina/FASTQtrimmed/$(1)_R1_val_1.fq.gz \
	-2 Illumina/FASTQtrimmed/$(1)_R2_val_2.fq.gz \
	--known-splicesite-infile $(hisat2ss) --summary-file $$@_summary.txt | \
	samtools view -b - | $(samtools) sort -o $$@ -T Illumina/hisat2/$(1)/$(1)tmp -@ $(nthreads) - 
endef
$(foreach S,$(Illuminasamples),$(eval $(call hisat2rule,$(S))))

define hisat2indexrule
Illumina/hisat2/$(1)/$(1).bam.bai: Illumina/hisat2/$(1)/$(1).bam
	$(samtools) index $$<
endef
$(foreach S,$(Illuminasamples),$(eval $(call hisat2indexrule,$(S))))

## Merge HISAT2 bam files
Illumina/hisat2/Illumina_WT/Illumina_WT.bam: $(foreach S,$(IlluminaWTsamples),Illumina/hisat2/$(S)/$(S).bam)
	mkdir -p $(@D)
	$(samtools) merge -f $@ $^

define stringtierefrule
Illumina/stringtie/$(1)/$(1)_stringtie.gtf: Illumina/hisat2/$(1)/$(1).bam $(gtf)
	mkdir -p $$(@D)
	$(stringtie) $$< -o $$@ -p $(nthreads) -G $(gtf) -e -A $$@.tab --rf
endef
$(foreach S,$(Illuminasamples),$(eval $(call stringtierefrule,$(S))))

define stringtieassemblyrule
Illumina/stringtie_assembly/$(1)/$(1)_stringtie_assembly.gtf: Illumina/hisat2/$(1)/$(1).bam $(gtf)
	mkdir -p $$(@D)
	$(stringtie) $$< -o $$@ -p $(nthreads) -G $(gtf) -A $$@.tab --rf
endef
$(foreach S,$(Illuminasamples) Illumina_WT,$(eval $(call stringtieassemblyrule,$(S))))

## Run gffcompare to compare with reference gtf
define stringtiegffcomparerule
Illumina/stringtie_assembly/$(1)/$(1)_stringtie_assembly.gffcompare: Illumina/stringtie_assembly/$(1)/$(1)_stringtie_assembly.gtf \
$(gtf)
	$(gffcompare) -o $$@ -r $(gtf) -R $$<
endef
$(foreach S,$(Illuminasamples) Illumina_WT,$(eval $(call stringtiegffcomparerule,$(S))))

## ========================================================================================= ##
## Summarize abundances 
## ========================================================================================= ##
define summarizerule
$(1)/output/$(1)_all_abundances.rds: $(foreach S,$($(1)samples),$(1)/salmon31/$(S)/quant.sf) \
$(foreach S,$($(1)samples),$(1)/salmonminimap2/$(S)/quant.sf) \
$(foreach S,$($(1)samples),$(1)/salmonminimap2_p0.99/$(S)/quant.sf) \
$(foreach S,$($(1)samples),$(1)/featurecountsminimap2_primary/$(S)/featurecountsminimap2.txt) \
$(foreach S,$($(1)samples),$(1)/wubminimap2/$(S)/bam_count_reads.tsv) \
$(tx2gene) $(Rscriptdir)/summarize_abundances.R
	mkdir -p $$(@D)
	mkdir -p $(1)/Rout
	$(R) "--args topdir='$(1)' tx2gene='$(tx2gene)' outrds='$$@'" $(Rscriptdir)/summarize_abundances.R $(1)/Rout/summarize_abundances.Rout
endef
$(foreach D,$(datasets),$(eval $(call summarizerule,$(D))))

## Illumina
Illumina/output/Illumina_all_abundances.rds: $(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) \
$(foreach S,$(Illuminasamples),Illumina/stringtie/$(S)/$(S)_stringtie.gtf) \
$(tx2gene) $(Rscriptdir)/summarize_abundances_illumina.R
	mkdir -p $(@D)
	mkdir -p Illumina/Rout
	$(R) "--args topdir='Illumina' tx2gene='$(tx2gene)' outrds='$@'" $(Rscriptdir)/summarize_abundances_illumina.R Illumina/Rout/summarize_abundances.Rout

## ========================================================================================= ##
## Perform DGE with edgeR 
## ========================================================================================= ##
define dgerule
$(1)/output/$(1)_all_dge_edger.rds: $(1)/output/$(1)_all_abundances.rds $(Rscriptdir)/dge_edgeR.R
	mkdir -p $(1)/output/dge_edger_plots
	mkdir -p $(1)/Rout
	$(R) "--args abundances='$$<' outrds='$$@'" $(Rscriptdir)/dge_edgeR.R $(1)/Rout/dge_edgeR.Rout
endef
$(foreach D,DCS108 NSK007 RNA001 pilot,$(eval $(call dgerule,$(D))))

## Illumina
Illumina/output/edgeR_dge.rds: $(tx2gene) $(metatxt) $(Rscriptdir)/dge_edgeR_illumina.R \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) 
	mkdir -p $(@D)
	mkdir -p Illumina/Rout
	$(R) "--args tx2gene='$<' salmondir='Illumina/salmon31' outrds='$@' metafile='$(metatxt)'" $(Rscriptdir)/dge_edgeR_illumina.R Illumina/Rout/dge_edgeR.Rout

## Illumina DTE
Illumina/output/edgeR_dte.rds: $(tx2gene) $(metatxt) $(Rscriptdir)/dte_edgeR_illumina.R \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) 
	mkdir -p $(@D)
	mkdir -p Illumina/Rout
	$(R) "--args tx2gene='$<' salmondir='Illumina/salmon31' outrds='$@' metafile='$(metatxt)'" $(Rscriptdir)/dte_edgeR_illumina.R Illumina/Rout/dte_edgeR.Rout

## ========================================================================================= ##
## Perform DTU with DEXSeq 
## ========================================================================================= ##
define dturule
$(1)/output/$(1)_all_dtu_dexseq.rds: $(1)/output/$(1)_all_abundances.rds $(tx2gene) $(Rscriptdir)/dtu_dexseq.R
	mkdir -p $$(@D)
	mkdir -p $(1)/Rout
	$(R) "--args abundances='$$<' tx2gene='$(tx2gene)' outrds='$$@'" $(Rscriptdir)/dtu_dexseq.R $(1)/Rout/dtu_dexseq.Rout
endef
$(foreach D,DCS108 NSK007 RNA001 pilot,$(eval $(call dturule,$(D))))

## Illumina
Illumina/output/dexseq_dtu.rds: $(tx2gene) $(metatxt) $(Rscriptdir)/dtu_dexseq_illumina.R \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) 
	mkdir -p $(@D)
	mkdir -p Illumina/Rout
	$(R) "--args tx2gene='$<' salmondir='Illumina/salmon31' outrds='$@' metafile='$(metatxt)'" $(Rscriptdir)/dtu_dexseq_illumina.R Illumina/Rout/dtu_dexseq.Rout

## ========================================================================================= ##
## Catalog the number of reads
## ========================================================================================= ##
define nbrreadsrule
$(1)/output/$(1)_nbr_reads.rds: $(foreach S,$($(1)samples),$(1)/FASTQ$(3)/$(S).$(2).gz) \
$(foreach S,$($(1)samples),$(1)/minimap2txome/$(S)/$(S)_minimap_txome.bam) \
$(foreach S,$($(1)samples),$(1)/minimap2txome_p0.99/$(S)/$(S)_minimap_txome_p0.99.bam) \
$(foreach S,$($(1)samples),$(1)/minimap2genome/$(S)/$(S)_minimap_genome_s.bam) \
$(Rscriptdir)/get_nbr_reads.R
	mkdir -p $$(@D)
	mkdir -p $(1)/Rout
	$(R) "--args fastqdir='$(1)/FASTQ' genomebamdir='$(1)/minimap2genome' txomebamdir='$(1)/minimap2txome' txomebamdir_p0.99='$(1)/minimap2txome_p0.99' outrds='$$@'" $(Rscriptdir)/get_nbr_reads.R $(1)/Rout/get_nbr_reads.Rout
endef
$(foreach D,DCS108 NSK007 pilot FGCZ_PCS109 FGCZ_SQK_PCS109 FGCZ_PCS109_GridION,$(eval $(call nbrreadsrule,$(D),fastq,)))
$(foreach D,FGCZ,$(eval $(call nbrreadsrule,$(D),FASTQ,)))
$(foreach D,HEK293RNA RNA001,$(eval $(call nbrreadsrule,$(D),fastq,dna)))
$(foreach D,dRNA_paper dRNA_paper_ERCC,$(eval $(call nbrreadsrule,$(D),fastq,)))

## ========================================================================================= ##
## Compare primary and supplementary alignments
## ========================================================================================= ##
define primsupprule
$(1)/output/$(1)_primary_supplementary_alignments_distances.rds: $(foreach S,$($(1)samples),$(1)/minimap2genome/$(S)/$(S)_minimap_genome_s.bam) \
$(Rscriptdir)/plot_distance_primary_supplementary_alignments.R
	mkdir -p $$(@D)
	mkdir -p $(1)/Rout
	$(R) "--args genomebamdir='$(1)/minimap2genome' outrds='$$@'" $(Rscriptdir)/plot_distance_primary_supplementary_alignments.R $(1)/Rout/plot_distance_primary_supplementary_alignments.Rout
endef
$(foreach D,$(datasets),$(eval $(call primsupprule,$(D))))

## ========================================================================================= ##
## Plot nbr of reads/equivalence class vs nbr of transcripts in ec
## ========================================================================================= ##
define eqclassrule
$(1)/output/$(1)_eq_classes_salmon31.rds: $(foreach S,$($(1)samples),$(1)/salmon31/$(S)/quant.sf) \
$(Rscriptdir)/plot_eq_class_counts.R
	mkdir -p $$(@D)
	mkdir -p $(1)/Rout
	$(R) "--args salmondir='$(1)/salmon31' outrds='$$@'" $(Rscriptdir)/plot_eq_class_counts.R $(1)/Rout/plot_eq_class_counts_salmon31.Rout
endef
$(foreach D,$(datasets),$(eval $(call eqclassrule,$(D))))
$(eval $(call eqclassrule,Illumina))

## ========================================================================================= ##
## Diagnostic plots of estimated abundances
## ========================================================================================= ##
define diagnrule
$(1)/output/$(1)_abundance_plot.html: $(1)/output/$(1)_all_abundances.rds \
$(Rscriptdir)/plot_abundances.R $(Rscriptdir)/plot_abundances_template.Rmd
	mkdir -p $$(@D)
	mkdir -p $(1)/Rout
	$(R) "--args abundances='$$<' rmdtemplate='$$(word 3,$$^)' outhtml='$$@'" $(Rscriptdir)/plot_abundances.R $(1)/Rout/plot_abundances.Rout
endef
$(foreach D,DCS108 HEK293RNA NSK007 pilot RNA001,$(eval $(call diagnrule,$(D))))

## ========================================================================================= ##
## SIRV & ERCC from dRNA paper (Garalde et al.)
## ========================================================================================= ##
## SIRV
dRNA_paper/minimap2txome_p0.99/SRR6058584/SRR6058584_minimap_txome_p0.99.bam: dRNA_paper/FASTQ/SRR6058584.fastq.gz \
dRNA_paper/reference/transcripts.fasta $(minimap2)
	mkdir -p $(@D)
	$(minimap2) -t $(nthreads) -ax map-ont -p 0.99 -N 100 $(word 2,$^) $(word 1,$^) | $(samtools) view -bS - > $@

dRNA_paper/minimap2txome/SRR6058584/SRR6058584_minimap_txome.bam: dRNA_paper/FASTQ/SRR6058584.fastq.gz \
dRNA_paper/reference/transcripts.fasta $(minimap2)
	mkdir -p $(@D)
	$(minimap2) -t $(nthreads) -ax map-ont -N 100 $(word 2,$^) $(word 1,$^) | $(samtools) view -bS - > $@

dRNA_paper/minimap2genome/SRR6058584/SRR6058584_minimap_genome_s.bam: dRNA_paper/FASTQ/SRR6058584.fastq.gz \
dRNA_paper/reference/SIRV_isoforms_multi-fasta_170612a.fasta $(minimap2)
	mkdir -p $(@D)
	$(minimap2) -t $(nthreads) -ax splice --splice-flank=no -N 10 $(word 2,$^) $(word 1,$^) | $(samtools) view -bS - | \
	$(samtools) sort -o $@ -T tmpSRR6058584 -@ $(nthreads) - 

## ERCC
dRNA_paper_ERCC/minimap2txome_p0.99/SRR6058582/SRR6058582_minimap_txome_p0.99.bam: dRNA_paper_ERCC/FASTQ/SRR6058582.fastq.gz \
dRNA_paper_ERCC/reference/ERCC92.fa $(minimap2)
	mkdir -p $(@D)
	$(minimap2) -t $(nthreads) -ax map-ont -p 0.99 -N 100 $(word 2,$^) $(word 1,$^) | $(samtools) view -bS - > $@

dRNA_paper_ERCC/minimap2txome/SRR6058582/SRR6058582_minimap_txome.bam: dRNA_paper_ERCC/FASTQ/SRR6058582.fastq.gz \
dRNA_paper_ERCC/reference/ERCC92.fa $(minimap2)
	mkdir -p $(@D)
	$(minimap2) -t $(nthreads) -ax map-ont -N 100 $(word 2,$^) $(word 1,$^) | $(samtools) view -bS - > $@

dRNA_paper_ERCC/minimap2genome/SRR6058582/SRR6058582_minimap_genome_s.bam: dRNA_paper_ERCC/FASTQ/SRR6058582.fastq.gz \
dRNA_paper_ERCC/reference/ERCC92.fa $(minimap2)
	mkdir -p $(@D)
	$(minimap2) -t $(nthreads) -ax splice -N 10 $(word 2,$^) $(word 1,$^) | $(samtools) view -bS - | \
	$(samtools) sort -o $@ -T tmpSRR6058582 -@ $(nthreads) - 


## ========================================================================================= ##
## Summary figures for manuscript
## ========================================================================================= ##
manuscript_results_figures/figures/nbr_reads/nbr_reads.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_nbr_reads.rds) \
manuscript_results_figures/Rscripts/plot_nbr_reads.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_nbr_reads.R manuscript_results_figures/Rout/plot_nbr_reads.Rout

manuscript_results_figures/figures/alignment/alignment.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_nbr_reads.rds) $(tx2gene) $(sidx31nokeepdup)/hash.bin \
manuscript_results_figures/Rscripts/plot_alignment.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
manuscript_results_figures/figures/nbr_junctions_per_read_illumina/nbr_junctions_per_read_illumina.rds \
manuscript_results_figures/figures/primary_supplementary_pairs/primary_supplementary_pairs.rds \
manuscript_results_figures/figures/txlength_vs_basecoverage/txlength_vs_basecoverage.rds \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args tx2gene='$(tx2gene)' outrds='$@' datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' duptx='$(sidx31nokeepdup)/duplicate_clusters.tsv' txlvsbc='manuscript_results_figures/figures/txlength_vs_basecoverage/txlength_vs_basecoverage.rds' primsupp='manuscript_results_figures/figures/primary_supplementary_pairs/primary_supplementary_pairs.rds' ilmnnjunc='manuscript_results_figures/figures/nbr_junctions_per_read_illumina/nbr_junctions_per_read_illumina.rds'" manuscript_results_figures/Rscripts/plot_alignment.R manuscript_results_figures/Rout/plot_alignment.Rout

manuscript_results_figures/figures/txcov_subsampling/txcov_subsampling.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_nbr_reads.rds) \
manuscript_results_figures/figures/txcov_subsampling/txcov_sirv.rds \
manuscript_results_figures/figures/txcov_subsampling/txcov_ercc.rds \
manuscript_results_figures/figures/illumina_nanopore_lengths_all_datasets/illumina_nanopore_lengths_all_datasets.rds \
manuscript_results_figures/Rscripts/plot_txcov_subsampling.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args tx2gene='$(tx2gene)' datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' txcercc='manuscript_results_figures/figures/txcov_subsampling/txcov_ercc.rds' txcsirv='manuscript_results_figures/figures/txcov_subsampling/txcov_sirv.rds' ilmnnplength='manuscript_results_figures/figures/illumina_nanopore_lengths_all_datasets/illumina_nanopore_lengths_all_datasets.rds' outrds='$@'" manuscript_results_figures/Rscripts/plot_txcov_subsampling.R manuscript_results_figures/Rout/plot_txcov_subsampling.Rout

manuscript_results_figures/figures/txcov_subsampling/txcov_sirv.rds: dRNA_paper/output/dRNA_paper_nbr_reads.rds \
manuscript_results_figures/Rscripts/plot_txcov_sirv.R 
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args bam='dRNA_paper/minimap2txome/SRR6058584/SRR6058584_minimap_txome.bam' dataset='dRNA_paper' labels='A,B' title='SIRV' outrds='$@'" manuscript_results_figures/Rscripts/plot_txcov_sirv.R manuscript_results_figures/Rout/plot_txcov_sirv.Rout

manuscript_results_figures/figures/txcov_subsampling/txcov_ercc.rds: dRNA_paper_ERCC/output/dRNA_paper_ERCC_nbr_reads.rds \
manuscript_results_figures/Rscripts/plot_txcov_sirv.R 
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args bam='dRNA_paper_ERCC/minimap2txome/SRR6058582/SRR6058582_minimap_txome.bam' dataset='dRNA_paper_ERCC' labels='C,D' title='ERCC' outrds='$@'" manuscript_results_figures/Rscripts/plot_txcov_sirv.R manuscript_results_figures/Rout/plot_txcov_ercc.Rout

manuscript_results_figures/figures/primary_supplementary_pairs/primary_supplementary_pairs.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_primary_supplementary_alignments_distances.rds) \
manuscript_results_figures/Rscripts/plot_primary_supplementary.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_primary_supplementary.R manuscript_results_figures/Rout/plot_primary_supplementary.Rout

manuscript_results_figures/figures/quant_salmon_wub_variants/quant_salmon_variants_all_datasets.rds: \
$(foreach D,$(datasetsms),$(foreach S,$($(D)samples),$(foreach M,salmon31 salmon31_aligned_noclippedbases salmonminimap2 salmonminimap2_p0.99,$(D)/$(M)/$(S)/quant.sf))) \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) $(tx2gene) \
manuscript_results_figures/Rscripts/plot_salmon_variants_all_datasets.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args tx2gene='$(tx2gene)' datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_salmon_variants_all_datasets.R manuscript_results_figures/Rout/plot_salmon_variants_all_datasets.Rout

manuscript_results_figures/figures/consistency_between_replicates/consistency_between_replicates.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_all_abundances.rds) \
Illumina/output/Illumina_all_abundances.rds \
manuscript_results_figures/Rscripts/plot_consistency_between_replicates.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk $(tx2gene)
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' tx2gene='$(tx2gene)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_consistency_between_replicates.R manuscript_results_figures/Rout/plot_consistency_between_replicates.Rout

manuscript_results_figures/figures/nbr_tx_in_eqclass/nbr_tx_in_eqclass.rds: \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) \
$(foreach D,$(datasetsms),$(foreach S,$($(D)samples),$(D)/salmon31/$(S)/quant.sf)) \
manuscript_results_figures/Rscripts/plot_nbr_tx_in_eqclass.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_nbr_tx_in_eqclass.R manuscript_results_figures/Rout/plot_nbr_tx_in_eqclass.Rout

manuscript_results_figures/figures/nbr_assigned_reads/nbr_assigned_reads.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_all_abundances.rds) \
$(foreach D,$(datasetsms),$(D)/output/$(D)_nbr_reads.rds) \
manuscript_results_figures/Rscripts/plot_nbr_assigned_reads.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_nbr_assigned_reads.R manuscript_results_figures/Rout/plot_nbr_assigned_reads.Rout

manuscript_results_figures/figures/nbr_assigned_reads_biotype/nbr_assigned_reads_biotype.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_all_abundances.rds) $(tx2gene) \
Illumina/output/Illumina_all_abundances.rds \
manuscript_results_figures/Rscripts/plot_nbr_assigned_reads_biotype.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args tx2gene='$(tx2gene)' datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_nbr_assigned_reads_biotype.R manuscript_results_figures/Rout/plot_nbr_assigned_reads_biotype.Rout

manuscript_results_figures/figures/nbr_detected_features/nbr_detected_features.rds: \
$(foreach D,$(datasetsms),$(D)/output/$(D)_all_abundances.rds) $(tx2gene) \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) \
manuscript_results_figures/Rscripts/plot_nbr_detected_features.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' tx2gene='$(tx2gene)' outrds='$@'" manuscript_results_figures/Rscripts/plot_nbr_detected_features.R manuscript_results_figures/Rout/plot_nbr_detected_features.Rout

manuscript_results_figures/figures/illumina_nanopore_lengths_all_datasets/illumina_nanopore_lengths_all_datasets.rds: \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) \
$(foreach D,$(datasets),$(D)/output/$(D)_nbr_reads.rds) $(tx2gene) \
manuscript_results_figures/Rscripts/plot_illumina_nanopore_lengths_all_datasets.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args tx2gene='$(tx2gene)' datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_illumina_nanopore_lengths_all_datasets.R manuscript_results_figures/Rout/plot_illumina_nanopore_lengths_all_datasets.Rout

manuscript_results_figures/figures/observed_junctions/observed_junctions.rds: \
$(foreach D,$(datasetsms),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_sbyname_primary_junctions.rds)) \
$(foreach S,$(Illuminasamples),Illumina/STAR/$(S)/$(S)_Aligned.sortedByCoord.out_junctions.rds) \
manuscript_results_figures/figures/nbr_tx_in_eqclass/nbr_tx_in_eqclass.rds \
manuscript_results_figures/Rscripts/plot_observed_junctions.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' ntxeq='manuscript_results_figures/figures/nbr_tx_in_eqclass/nbr_tx_in_eqclass.rds' outrds='$@'" manuscript_results_figures/Rscripts/plot_observed_junctions.R manuscript_results_figures/Rout/plot_observed_junctions.Rout

manuscript_results_figures/figures/nbr_junctions_per_read_illumina/nbr_junctions_per_read_illumina.rds: \
$(foreach S,$(Illuminasamples),Illumina/STAR/$(S)/$(S)_Aligned.sortedByCoord.out.bam) \
manuscript_results_figures/Rscripts/plot_nbr_junctions_per_read_illumina.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args genomebamdir='Illumina/STAR' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_nbr_junctions_per_read_illumina.R manuscript_results_figures/Rout/plot_nbr_junctions_per_read_illumina.Rout

manuscript_results_figures/figures/rseqc_coverage/rseqc_coverage.rds: \
RSeQC/RSeQC_geneBody_coverage.geneBodyCoverage.r \
manuscript_results_figures/Rscripts/plot_rseqc.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_rseqc.R manuscript_results_figures/Rout/plot_rseqc.Rout

manuscript_results_figures/figures/flair_summary/flair_summary.rds: \
$(foreach D,$(datasetsms),$(foreach S,$(D)_all $(D)_WT,$(D)/flair/$(S)/$(S)_minimap_genome_s_primary_flair_collapse.isoforms.gffcompare)) \
Illumina/output/Illumina_all_abundances.rds \
manuscript_results_figures/Rscripts/plot_flair_summary.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' outrds='$@'" manuscript_results_figures/Rscripts/plot_flair_summary.R manuscript_results_figures/Rout/plot_flair_summary.Rout

manuscript_results_figures/figures/txlength_vs_basecoverage/txlength_vs_basecoverage.rds: \
$(foreach D,$(datasetsms),$(foreach S,$($(D)samples),$(D)/minimap2genome/$(S)/$(S)_minimap_genome_s.bam)) \
$(foreach S,$(Illuminasamples),Illumina/STAR/$(S)/$(S)_Aligned.sortedByCoord.out.bam) \
$(foreach S,$(Illuminasamples),Illumina/salmon31/$(S)/quant.sf) $(tx2gene) $(gtf) \
manuscript_results_figures/Rscripts/plot_txlength_vs_basecoverage.R \
manuscript_results_figures/Rscripts/remap_sample_names.R \
datasets_to_include.mk
	mkdir -p $(@D)
	mkdir -p manuscript_results_figures/Rout
	$(R) "--args datasets='$(datasetsmsc)' conditions='$(conditionsmsc)' tx2gene='$(tx2gene)' gtf='$(gtf)' outrds='$@'" manuscript_results_figures/Rscripts/plot_txlength_vs_basecoverage.R manuscript_results_figures/Rout/plot_txlength_vs_basecoverage.Rout

## ========================================================================================= ##
## Other
## ========================================================================================= ##
## List all packages
listpackages:
	$(R) "--args routdirs='Rout,DCS108/Rout,FGCZ/Rout,FGCZ_PCS109/Rout,FGCZ_SQK_PCS109/Rout,Illumina/Rout,NSK007/Rout,pilot/Rout,RNA001/Rout,HEK293RNA/Rout,manuscript_results_figures/Rout' outtxt='all_packages.txt'" $(Rscriptdir)/list_packages.R Rout/list_packages.Rout

